# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle


on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: deploy011-bucket-replicaset

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working-directory: ./server
      RDS_URL: ${{ secrets.RDS_URL }}
      RDS_USERNAME: $ {{ secrets.RDS_USERNAME }}
      RDS_PASSWORD: $ {{ secrets.RDS_PASSWORD }}

      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}

      TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
      ACCESS_TOKEN_EXPIRATION_TIME: ${{ secrets.ACCESS_TOKEN_EXPIRATION_TIME }}  # 15분 1000(ms) x 60(s) x 15(m)
      REFRESH_TOKEN_EXPIRATION_TIME: ${{ secrets.REFRESH_TOKEN_EXPIRATION_TIME }} # 2주 1000(ms) x 60 (s) x 60(m) x 24(h) x 14(d)
      JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}

    defaults:
        run:
          working-directory: ./server

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew build
  
   # - name: Build with Gradle
   #   uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
   #   with:
   #     arguments: build
        
    - name: Make zip file
      run: zip -r ./main.zip .
      shell: bash
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./main.zip s3://$S3_BUCKET_NAME/main.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name main
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name main-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=main.zip
